# Implements the program:
# main:
#         ori    x1, x0, 0x3d # initalize three numebrs to perform a bitwise MAJ over
#         ori    x2, x0, 0xf4
#         ori    x3, x0, 0x55
#
#         and    x4, x1, x2  // calculate a majority function
#         and    x5, x1, x3 
#         and    x6, x2, x3 
#         or     x7, x4, x5 
#         or     x7, x7, x6 // x7 = 0x75 = BITWISE_MAJ(x1, x2, x3)
#
#         ebreak
sp 0x3ef0 # initial stack pointer
pc 0x3f00 # start address

# <address (hex)> <size> <number (little endian)>
0x3f00 4 03d06093 # ori     ra,zero,61
0x3f04 4 0f406113 # ori     sp,zero,244
0x3f08 4 05506193 # ori     gp,zero,85
0x3f0c 4 0020f233 # and     tp,ra,sp
0x3f10 4 0030f2b3 # and     t0,ra,gp
0x3f14 4 00317333 # and     t1,sp,gp
0x3f18 4 005263b3 # or      t2,tp,t0
0x3f1c 4 0063e3b3 # or      t2,t2,t1
0x3f20 4 00100073 # ebreak